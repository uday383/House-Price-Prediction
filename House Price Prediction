# Import necessary libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Load your dataset
data = pd.read_csv("house_data.csv")  # Replace with your dataset file

# Explore your data (optional)
print(data.head())  # Display the first few rows to check the data

# Define your features (X) and target variable (y)
X = data[['feature1', 'feature2', 'feature3']]  # Replace with actual feature names
y = data['price']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create and train the linear regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Make predictions on the test set
y_pred = model.predict(X_test)

# Evaluate the model
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f"Mean Squared Error: {mse}")
print(f"R-squared: {r2}")

# Visualize the predictions (optional)
plt.scatter(y_test, y_pred)
plt.xlabel("Actual Prices")
plt.ylabel("Predicted Prices")
plt.title("Actual Prices vs. Predicted Prices")
plt.show()

# Predict the price of a new house (provide feature values)
new_house_features = np.array([value1, value2, value3])  # Replace with actual feature values
predicted_price = model.predict([new_house_features])
print(f"Predicted Price for New House: {predicted_price[0]}")
